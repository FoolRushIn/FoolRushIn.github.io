(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{517:function(_,v,t){"use strict";t.r(v);var n=t(4),a=Object(n.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("p",[_._v("因特网的协议栈有5个层次组成**：物理层、链路层、网络成、传输层、应用层**")]),_._v(" "),t("p",[t("strong",[_._v("应用层")]),_._v("：应用层协议分布在多个端系统，端系统中的应用程序使用该协议与另一个端系统中的应用程序通信。处于应用层的分组称为"),t("strong",[_._v("报文")]),_._v("；\n"),t("strong",[_._v("传输层")]),_._v("：传输层在应"),t("strong",[_._v("用程序端点之间")]),_._v("传输应用层报文，因特网中有两个传输层协议：TCP和UDP。处于传输层的分组称为"),t("strong",[_._v("报文段")]),_._v("。TCP提供确保传递、流量控制、拥塞控制机制。UDP提供无连接服务，即不提供不必要服务的服务。没有可靠性、没有流量和拥塞控制。\n"),t("strong",[_._v("网络层")]),_._v("：网络层将称为数据报的网络层分组从"),t("strong",[_._v("一台主机移动到另一台主机")]),_._v("。网络层协议包含著名的IP协议以及其他一些路由选择协议。"),t("strong",[_._v("数据报")]),_._v(" "),t("strong",[_._v("链路层")]),_._v("：链路层将称为"),t("strong",[_._v("帧的链路层分组从一个结点移动到路径上的另一个端点")]),_._v("。一个帧可能被沿途不同链路上的不同链路层协议处理。"),t("strong",[_._v("帧")]),_._v(" "),t("strong",[_._v("物理层")]),_._v("：物理层的任务是将"),t("strong",[_._v("帧中的比特从一个结点移动到下一个节点")]),_._v("，它提供了传输信息的实际物理通道；")]),_._v(" "),t("p",[t("img",{attrs:{src:"D:%5CblogImage%5C20190324183705231.png",alt:""}})]),_._v(" "),t("p",[_._v("设计系统时流量强度不能大于1")]),_._v(" "),t("p",[_._v("通过网络链路和交换机移动数据有两种基本方法：电路交换和分组交换")]),_._v(" "),t("p",[_._v("在电路交换网络中，在端系统通信会话期间，交换机会预留端系统间通信路径上的相关资源（缓存，链路传输速率），即先建立连接，然后通信；而在分组交换网络中，这些资源没有被预留；也就是说，在端系统进行通信时，其所需要的资源是被保持的，其他通信是无法使用这一部分资源的；也就说，端系统间真正建立了一条“连接”；而这一连接，用电话的术语被称为“电路”。传统的电话网络就是电路交换网络的例子。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_jpg/US10Gcd0tQHHicibiaVO2qntJL1icM2XQPRFGE8yVewpWqsajLreqAqwibFxFMIdqNjdjpbS1LfibiaHIXPbegVDiccY4w/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:""}})]),_._v(" "),t("p",[t("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/US10Gcd0tQHHicibiaVO2qntJL1icM2XQPRFldVabsPcXiaTfFiatoq0aXfn2SrpGiaJX1VCQahf2iczL3pN2n7JBibwicMg/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:""}})]),_._v(" "),t("p",[_._v("UDP 首部字段只有 8 个字节，包括源端口、目的端口、长度、检验和。12 字节的伪首部是为了计算检验和临时添加的。")]),_._v(" "),t("p",[t("strong",[_._v("为什么会发生 TCP 粘包、拆包？")])]),_._v(" "),t("ul",[t("li",[_._v("要发送的数据大于 TCP 发送缓冲区剩余空间大小，将会发生拆包。")]),_._v(" "),t("li",[_._v("待发送数据大于 MSS（最大报文长度），TCP 在传输前将进行拆包。")]),_._v(" "),t("li",[_._v("要发送的数据小于 TCP 发送缓冲区的大小，TCP 将多次写入缓冲区的数据一次发送出去，将会发生粘包。")]),_._v(" "),t("li",[_._v("接收数据端的应用层没有及时读取接收缓冲区中的数据，将发生粘包。")])]),_._v(" "),t("p",[t("strong",[_._v("TCP 滑动窗口")])]),_._v(" "),t("ul",[t("li",[_._v("接收窗口只会对窗口内最后一个按序到达的字节进行确认，例如接收窗口已经收到的字节为 {31, 34, 35}，其中 {31} 按序到达，而 {34, 35} 就不是，因此只对字节 31 进行确认。发送方得到一个字节的确认之后，就知道这个字节之前的所有字节都已经被接收。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_jpg/j5D4MI5U9vX67Ziaria9ibcMMNVR5Gn2zUFPbJaxr30iaNze41BbOphdpYDGN7TLqGA48nt7x9FnkOvcTA5msDuJow/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:""}})]),_._v(" "),t("p",[t("strong",[_._v("3次ACK冗余: 丢失包 快速重传. 2次ACK冗余, 乱序")])]),_._v(" "),t("p",[_._v("上面一个答案是自顶向下那本书中英文的答案，我简单点说吧，其实这个设计是一种权衡。发送端收到了3个关于包n的冗余ACK，说明n没收到，但3个在n之后的包收到了，作者认为这种情况下快速重传是一种最佳的权衡（其实我也不清楚具体原因）。如果快速重传机制设置为收到2个冗余ack就重传的话，有可能会发生这种情况：发送n,n+1,n+2但是由于网络原因n+1，n+2先到了，这时候会产生2个n的冗余ack，然后发送端就会重新发送n。")]),_._v(" "),t("h1",{attrs:{id:"交换机和路由器的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#交换机和路由器的区别"}},[_._v("#")]),_._v(" 交换机和路由器的区别:")]),_._v(" "),t("p",[t("strong",[_._v("工作层次不同：")]),_._v("\n交换机主要工作在数据链路层（第二层）\n路由器工作在网络层（第三层）。\n"),t("strong",[_._v("转发依据不同：")]),_._v("\n交换机转发所依据的对象时：MAC地址。（物理地址）iu\n路由转发所依据的对象是：IP地址。（网络地址）\n"),t("strong",[_._v("主要功能不同：")]),_._v("\n交换机主要用于组建局域网，\n而路由主要功能是将由交换机组好的局域网相互连接起来，或者接入Internet。\n交换机能做的，路由都能做。\n交换机不能分割广播域，路由可以。\n路由还可以提供防火墙的功能。\n路由配置比交换机复杂。")]),_._v(" "),t("h1",{attrs:{id:"主机号和网络号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主机号和网络号"}},[_._v("#")]),_._v(" 主机号和网络号")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("按照子网掩码的定义，子网掩码1所对应的位为网络号位, 而0所对应的位为主机号位")])]),_._v(" "),t("li",[t("strong",[_._v("广播地址的定义是主机号位全为1的地址就是广播地址")])]),_._v(" "),t("li",[_._v("子网掩码/24, 是简化表示, 代表有24个连续的1, 即是255.255.255.0")])]),_._v(" "),t("p",[t("strong",[_._v("例如")]),_._v("\n有一个C类地址为: 192.9.200.13　\n其缺省的子网掩码为: 255.255.255.0")]),_._v(" "),t("p",[_._v("则它的网络号和主机号可按如下方法得到：")]),_._v(" "),t("p",[_._v("① IP地址 192.9.200.13\n转换为二进制11000000　00001001　11001000　00001101")]),_._v(" "),t("p",[_._v("② 子网掩码255.255.255.0\n转换为二进制11111111　11111111　11111111　00000000")]),_._v(" "),t("p",[_._v("③ "),t("strong",[_._v("将两个二进制数做按位与（&）运算后得出的结果即为网络部分")]),_._v("\n11000000　00001001　11001000　00001101　\n& 11111111　11111111　11111111　00000000\n-------------------------------------------------------------\n11000000　00001001　11001000　00000000\n= 192 . 9 . 200 . 0\n即网络号为192.9.200.0")]),_._v(" "),t("p",[_._v("④"),t("strong",[_._v("将子网掩码取反再与IP地址按位与（&）后得到的结果即为主机部分")]),_._v("\n11000000　00001001　11001000　00001101　\n&　 00000000　00000000　00000000　11111111 --- >已将掩码取反\n------------------------------------------------------------\n00000000　00000000　00000000　00001101　\n= 0 . 0 . 0 . 13\n即主机号为13(或者0.0.0.13)。")]),_._v(" "),t("h1",{attrs:{id:"看是否是同一网段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#看是否是同一网段"}},[_._v("#")]),_._v(" 看是否是同一网段")]),_._v(" "),t("ol",[t("li",[_._v("主机A:IP-A/掩码A")]),_._v(" "),t("li",[_._v("主机B:IP-B/掩码B")]),_._v(" "),t("li",[_._v("IP-A和掩码A做与运算,得到主机A的网络号:subnet-a")]),_._v(" "),t("li",[_._v("同理,得到subnet-b")])]),_._v(" "),t("p",[_._v("判断B是是否和自己在一个子网里,是用IP-B和掩码A做与运算,得到subnet-b1,然后比较subnet-b1和subnet-a是否一致")]),_._v(" "),t("p",[t("img",{attrs:{src:"D:%5CblogImage%5C%E5%8D%8F%E8%AE%AE23.png",alt:"协议23"}})]),_._v(" "),t("p",[t("img",{attrs:{src:"D:%5CblogImage%5C%E5%8D%8F%E8%AE%AE.jpg",alt:"协议"}})]),_._v(" "),t("p",[t("img",{attrs:{src:"D:%5CblogImage%5C4404901_1526174233409_F47CF3EEC871EB6DD4498CA2322CDDB5",alt:"img"}})]),_._v(" "),t("h4",{attrs:{id:"一-表式系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-表式系统"}},[_._v("#")]),_._v(" 一. 表式系统")]),_._v(" "),t("p",[_._v("仅支持关系（即表）数据结构，不支持关系（即集合）操作。")]),_._v(" "),t("h4",{attrs:{id:"二、-最小-关系系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、-最小-关系系统"}},[_._v("#")]),_._v(" 二、（最小）关系系统")]),_._v(" "),t("p",[_._v("仅支持关系数据结构和三种关系搡作。即4.1.l中定义的关系系统。许多微机关系数据库系统如FoxBASE、FoxPro等就属于这一类。")]),_._v(" "),t("h4",{attrs:{id:"三、关系完备的系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、关系完备的系统"}},[_._v("#")]),_._v(" 三、关系完备的系统")]),_._v(" "),t("p",[_._v("这类系统支持关系数据结构和所有的关系代数操作（功能上与关系代数等价）。")]),_._v(" "),t("h4",{attrs:{id:"四、全关系系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、全关系系统"}},[_._v("#")]),_._v(" 四、全关系系统")]),_._v(" "),t("p",[_._v("这类系统支持关系模型的所有特征。即不仅是关系上完备的而且支持数据结构中域的概念，支持实体完整性和参照完整性。目前，大多数关系系统已不同程度上接近或达到了这个目标。")])])}),[],!1,null,null,null);v.default=a.exports}}]);